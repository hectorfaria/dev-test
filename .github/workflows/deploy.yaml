name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps/
      - name: Lint code
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps/
      - name: Test Code
        id: run-tests
        run: npm run test
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps/
      - name: Coverage the tests
        id: coverage-test
        run: npm run coverage > test-report.txt
        shell: bash
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.txt
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps/
      - name: Check for vulnerabilities
        run: npm audit -json > scan-report.json
        id: scan-code
        shell: bash
      - name: Upload scan report
        uses: actions/upload-artifact@v3
        with:
          name: scan-report
          path: scan-report.json
  docker:
    runs-on: ubuntu-latest
    needs: [test,scan]
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push to Dockerhub
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: hectorfaria/dev-test:latest
  kubernetes:
    runs-on: ubuntu-latest
    name: Deploying to minikube
    needs: docker
    steps:
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          addons: metrics-server,ingress
      - name: verify the minikube is working
        run: kubectl get pods -A
      - name: Build image
        run: |
            export SHELL=/bin/bash
            eval $(minikube -p minikube docker-env)
            docker build -f ./Dockerfile -t hectorfaria/dev-test:latest .
            echo -n "verifying images:"
            docker images         
      - name: Enabling addons
        run: |
          minikube addons enable ingress
          minikube addons enable metrics-server  
      - name: Deploy the namespace
        run:
          kubectl apply -f minikube/namespace.yaml
      - name: Deploying the rest of the files
        run:
          kubectl apply -f minikube/
      - name: Adding minikube ip to the /etc/hosts
        run: |
          export SHELL=/bin/bash
          echo "$(minikube ip) dev-test.com" | sudo tee -a /etc/hosts
      - name: Test service URLs
        run: |
            export SHELL=/bin/bash
            minikube service list
            minikube service dev-test-srv --url
            curl dev-test.com
